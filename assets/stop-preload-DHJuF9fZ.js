(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function s(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(e){if(e.ep)return;e.ep=!0;const r=s(e);fetch(e.href,r)}})();function a(i,t=document){return t.querySelectorAll(i)}function n(i,t=document){return t.querySelector(i)}class d{burgerBtn;menuAdapt;search;searchBtn;constructor(){this.burgerBtn=n(".burger-btn"),this.menuAdapt=n(".header__menu_adapt"),this.search=n(".header__search-and-bag .search"),this.searchBtn=n(".header__search-and-bag .search svg"),this.burger(),this.searchFunc()}burger(){const t=this;this.burgerBtn.addEventListener("click",function(){t.burgerBtn.classList.toggle("active"),t.menuAdapt.classList.toggle("active")})}searchFunc(){const t=this;this.searchBtn.addEventListener("click",function(){t.search.classList.toggle("active")})}}class h{accordionTitle;accordionContent;constructor(){this.accordionTitle=a(".accordion__item"),this.accordionContent=a(".accordion__info"),this.initAccordion()}initAccordion(){this.accordionTitle.forEach((t,s)=>{t.addEventListener("click",()=>{this.toggleAccordion(s)})})}toggleAccordion(t){const s=this.accordionContent[t].classList.toggle("active");this.accordionTitle[t].classList.toggle("active"),s&&this.closeOtherAccordions(t),this.accordionContent.forEach((o,e)=>{e!==t&&(o.style.maxHeight="0",o.classList.remove("active"))}),s?this.accordionContent[t].style.maxHeight=`${this.accordionContent[t].scrollHeight}px`:this.accordionContent[t].style.maxHeight="0"}closeOtherAccordions(t){this.accordionContent.forEach((s,o)=>{o!==t&&s.classList.contains("active")&&s.classList.remove("active")}),this.accordionTitle.forEach((s,o)=>{o!==t&&s.classList.contains("active")&&s.classList.remove("active")})}}const u=async(i,t={})=>{const{method:s="GET",headers:o={},body:e}=t;if(!["GET","POST","PUT","DELETE"].includes(s))return{data:null,error:{message:`Invalid HTTP method: ${s}`,status:400}};try{const c=await fetch(i,{method:s,headers:{"Content-Type":"application/json",...o},body:e?JSON.stringify(e):void 0});if(!c.ok)throw{message:`HTTP error! status: ${c.status}`,status:c.status};return{data:await c.json(),error:null}}catch(c){return{data:null,error:{message:c.message,status:c.status}}}};class g{static stop(t=""){const o=document.querySelectorAll("."+t+" img").length,e=new CustomEvent("loadingIsFinished",{detail:{block:t,requiredImagesCount:o}});document.dispatchEvent(e)}}export{h as A,d as B,g as L,a,u as f,n as g};
