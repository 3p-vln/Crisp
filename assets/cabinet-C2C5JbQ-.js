import{g as n,a as v,f as c,b,u as $,E as x,d as S,e as U,r as u,B as V,S as P,A as M}from"./search-DP2q2jjU.js";import{A as j,P as q,S as F}from"./pop-up-closer-DNyzttUJ.js";import{T as B}from"./tabs-C4AD9RJJ.js";import{J as R}from"./just-validate.es-C73wyOde.js";import{L as O}from"./stop-preload-lHMBXtTV.js";class W{title;breadCrumbs;observer;constructor(){this.title=n(".title__content h2"),this.breadCrumbs=v(".bread-crumbs a")[1],this.updateTitle(),this.observer=new MutationObserver(()=>this.updateTitle());const e={attributes:!0,attributeFilter:["class"],subtree:!0};document.querySelectorAll(".tabs__nav-btn").forEach(r=>{this.observer.observe(r,e),r.addEventListener("click",s=>{s.preventDefault(),this.setActiveTab(r),this.updateUrl(r)})}),this.initActiveTab()}updateTitle(){this.title&&this.breadCrumbs&&(this.title.textContent=this.getActiveTabTitle(),this.breadCrumbs.textContent=this.getActiveTabTitle())}getActiveTabTitle(){const e=n(".tabs__nav-btn_active");return e&&e.textContent||""}setActiveTab(e){document.querySelectorAll(".tabs__nav-btn").forEach(i=>i.classList.remove("tabs__nav-btn_active")),e.classList.add("tabs__nav-btn_active");const r=e.getAttribute("data-tab"),s=n(r);document.querySelectorAll(".tabs__item").forEach(i=>i.classList.remove("tabs__item_active")),s&&s.classList.add("tabs__item_active"),this.updateTitle()}updateUrl(e){const t=e.getAttribute("data-tab")?.substring(1);t&&history.pushState(null,"",`#${t}`)}initActiveTab(){const e=window.location.hash;if(e){const t=document.querySelector(`.tabs__nav-btn[data-tab="${e}"]`);t&&this.setActiveTab(t)}else{const t=document.querySelector(".tabs__nav-btn");t&&this.setActiveTab(t)}}}class z{userData;uid;constructor(){this.uid=this.getCookie("UID"),this.init()}init(){console.log(this.uid),this.conectDb()}getCookie(e){const r=`; ${document.cookie}`.split(`; ${e}=`);if(r.length===2)return r.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const e={projectId:"crisp-b06bf"},t={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},r=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents:runQuery`,s=await c(r,{method:"POST",body:t});if(s.error){console.error("Error fetching data:",s.error);return}if(s.data&&s.data.length>0){const o=s.data[0];o.document&&o.document.fields&&(this.userData=o.document.fields,console.log(this.userData),this.updateUi())}}updateUi(){this.contactInfo(),this.billing(),this.shoppingAdress()}contactInfo(){if(!this.userData)return;const e=n(".full-name");e&&(e.innerHTML=`${this.userData.name.stringValue} ${this.userData.surname.stringValue}`);const t=n(".email");t&&(t.innerHTML=this.userData.email.stringValue)}async billing(){if(this.userData&&this.userData.billing?.stringValue){const e=this.userData.billing.stringValue;let t=null;const s=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/billing/${e}`,o=await c(s);if(o.error){console.error("Ошибка при загрузке данных:",o.error);return}if(o.data){t=o.data.fields;const i=n(".billing-address");i&&(i.innerHTML=`${t.country.stringValue}, ${t.city.stringValue}, ${t.street.stringValue} street`)}}}async shoppingAdress(){if(this.userData&&this.userData.shoppingAddress?.stringValue){const e=this.userData.shoppingAddress.stringValue;let t=[];const s=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/shopping-address/${e}/allUserAddress`,o=await c(s);if(o.error){console.error("Ошибка при загрузке данных:",o.error);return}if(console.log("Response data:",o.data),o.data&&Array.isArray(o.data.documents)){o.data.documents.forEach(a=>{a.fields&&t.push(a.fields)});const i=n(".shopping-address");if(i&&t.length>0){const a=t[0];i.innerHTML=`${a.phone.stringValue}<br>${a.country.stringValue}, ${a.city.stringValue}, ${a.street.stringValue} street, ${a.zip.stringValue}`}}else console.error("Response data is not in the expected format:",o.data)}}}class H{userData;uid;constructor(){this.uid=this.getCookie("UID"),this.init()}init(){console.log(this.uid),this.conectDb(),this.setupEventListeners()}getCookie(e){const r=`; ${document.cookie}`.split(`; ${e}=`);if(r.length===2)return r.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const e={projectId:"crisp-b06bf"},t={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},r=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents:runQuery`;try{const s=await c(r,{method:"POST",body:t});if(s.error){console.error("Error fetching data:",s.error);return}if(s.data&&s.data.length>0){const o=s.data[0];o.document&&o.document.fields&&(this.userData=o.document.fields,this.uid=o.document.name.split("/").pop(),console.log(this.userData),this.updateUi())}}catch(s){console.error("Error fetching data:",s)}}updateUi(){const e=v(".form__item-input");e&&e.forEach(t=>{t.id==="name"&&this.userData?t.value=this.userData.name.stringValue:t.id==="surname"&&this.userData&&(t.value=this.userData.surname.stringValue)})}setupEventListeners(){const e=n(".form__button .save");e&&e.addEventListener("click",d=>{d.preventDefault(),this.updateData(),window.location.reload()});const t=n("#changeEmailCheckbox"),r=n("#changePasswordCheckbox"),s=n("#emailField"),o=n("#passwordField"),i=n("#currentPasswordEmail")?.parentElement?.parentElement,a=n("#currentPassword")?.parentElement?.parentElement;t&&t.addEventListener("change",()=>{s.style.display=t.checked?"flex":"none",i.style.display=t.checked?"flex":"none"}),r&&r.addEventListener("change",()=>{o.style.display=r.checked?"flex":"none",a.style.display=r.checked?"flex":"none"})}async updateData(){const e=n("#name"),t=n("#surname"),r=n("#changeEmailCheckbox"),s=n("#email"),o=n("#changePasswordCheckbox"),i=n("#password"),a=n("#currentPasswordEmail"),d=n("#currentPassword");if(!e||!t||!r||!s||!o||!i||!d||!a){console.error("One or more input elements are not found in the DOM");return}const h=e.value,p=t.value,g=r.checked,y=s.value,C=o.checked,I=i.value,A=a.value,L=d.value;if(!this.uid){console.error("UID not found");return}console.log("Updating data for UID:",this.uid),console.log("New name:",h),console.log("New surname:",p);const k={projectId:"crisp-b06bf"},T=`users/${this.uid}`,D=`https://firestore.googleapis.com/v1/projects/${k.projectId}/databases/(default)/documents/${T}?updateMask.fieldPaths=name&updateMask.fieldPaths=surname${g?"&updateMask.fieldPaths=email":""}`;let w={fields:{name:{stringValue:h},surname:{stringValue:p}}};g&&(w.fields.email={stringValue:y}),console.log("Request URL:",D),console.log("Request body:",w);try{const f=await c(D,{method:"PATCH",body:w});if(f.error){console.error("Error updating data:",f.error);return}g&&await this.updateEmail(y,A),C&&await this.updatePassword(I,L),console.log("Data updated successfully:",f.data)}catch(f){console.error("Error updating data:",f)}}async updateEmail(e,t){const r=b.currentUser;if(r)try{await this.reauthenticateUser(t),await $(r,e),console.log("Email updated successfully")}catch(s){console.error("Error updating email:",s)}}async reauthenticateUser(e){const t=b.currentUser;if(t&&t.email){const r=x.credential(t.email,e);try{await S(t,r),console.log("User re-authenticated successfully.")}catch(s){console.error("Error re-authenticating user:",s)}}}async updatePassword(e,t){const r=b.currentUser;if(r)try{await this.reauthenticateUser(t),await U(r,e),console.log("Password updated successfully")}catch(s){console.error("Error updating password:",s)}}}class E{dropdownSelect;dropdownMenu;menuItems;constructor(e,t){const r=n(e),s=n(t);if(!r||!s)throw new Error("Dropdown select or menu element not found");this.dropdownSelect=r,this.dropdownMenu=s,this.menuItems=v(".drop-down__item",this.dropdownMenu),this.init()}init(){this.dropdownSelect.addEventListener("click",e=>this.toggleMenu(e)),this.menuItems.forEach(e=>{e.addEventListener("click",()=>this.onItemClick(e))}),document.addEventListener("click",e=>this.handleOutsideClick(e)),this.dropdownMenu.classList.add("hidden")}onItemClick(e){const t=e.textContent;t&&(this.dropdownSelect.textContent=t,this.teardownDropdown())}teardownDropdown(){this.dropdownMenu.classList.add("hidden"),this.dropdownSelect.classList.remove("active")}toggleMenu(e){e.stopPropagation(),this.dropdownSelect.classList.toggle("active"),this.dropdownMenu.classList.toggle("hidden")}handleOutsideClick(e){!this.dropdownSelect.contains(e.target)&&!this.dropdownMenu.contains(e.target)&&this.teardownDropdown()}}class Q extends E{constructor(e,t){super(e,t),this.initDropdownTabs()}initDropdownTabs(){window.innerWidth<=768&&this.setupDropdown(),window.addEventListener("resize",()=>{window.innerWidth<=768?this.setupDropdown():this.teardownDropdown()})}setupDropdown(){this.dropdownMenu.classList.add("drop-down__menu"),this.dropdownMenu.classList.add("hidden");const e=this.dropdownMenu.querySelector(".tabs__nav-btn_active");e&&e.textContent&&(this.dropdownSelect.textContent=e.textContent.trim())}teardownDropdown(){this.dropdownMenu.classList.remove("drop-down__menu"),this.dropdownMenu.classList.remove("hidden")}onItemClick(e){this.menuItems.forEach(t=>t.classList.remove("tabs__nav-btn_active")),e.classList.add("tabs__nav-btn_active"),super.onItemClick(e)}}class N{uid;constructor(){this.uid=this.getCookie("UID"),this.init()}init(){if(console.log(this.uid),!this.uid){window.location.href="/Crisp/index.html";return}}getCookie(e){const r=`; ${document.cookie}`.split(`; ${e}=`);if(r.length===2)return r.pop()?.split(";").shift()}}const m=n(".drop-down#state"),J=n("#country-hidden"),K=n("#state-hidden");class _ extends E{constructor(e,t){super(e,t)}onItemClick(e){super.onItemClick(e);const t=e.textContent;t&&(this.updateStateDropdown(t),this.updateHiddenInputFields(t))}updateStateDropdown(e){const t=this.getStatesByCountry(e);if(!m){console.error("State dropdown element not found");return}const r=m.querySelector(".drop-down__select");r&&(r.textContent="");const s=m.querySelector(".drop-down__list");s&&(s.innerHTML="",t.forEach(i=>{const a=document.createElement("div");a.classList.add("drop-down__item"),a.textContent=i,s.appendChild(a)}),s.querySelectorAll(".drop-down__item").forEach(i=>{i.addEventListener("click",()=>{if(!m){console.error("State dropdown element not found");return}const a=m.querySelector(".drop-down__select");a&&(a.textContent=i.textContent),this.teardownDropdown(),this.updateHiddenInputFields(i.textContent)})}))}getStatesByCountry(e){return{Ukraine:["Kyiv","Kharkiv","Odessa","Sumy","Zhytomyr","Lviv"],USA:["California","New York","Texas"],Canada:["Ontario","Quebec","British Columbia"]}[e]||[]}updateHiddenInputFields(e){const t=this.dropdownSelect.textContent;t&&(J.value=t),e&&(K.value=e)}}class G{userData;newAddressDb;uid;constructor(){this.newAddressDb=null,this.userData=null,this.uid=this.getCookie("UID"),this.init()}init(){this.fieldsDb(),this.conectDb()}fieldsDb(){const e=n("#company").value,t=n("#phone").value,r=n("#fax").value,s=n("#street").value,o=n("#country .drop-down__select")?.innerText,i=n("#state .drop-down__select")?.innerText,a=n("#zip").value;this.newAddressDb={country:{stringValue:o||""},city:{stringValue:i||""},street:{stringValue:s},zip:{stringValue:a},phone:{stringValue:t}},e&&(this.newAddressDb.company={stringValue:e}),r&&(this.newAddressDb.fax={stringValue:r}),console.log(this.newAddressDb)}getCookie(e){const r=`; ${document.cookie}`.split(`; ${e}=`);if(r.length===2)return r.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const e={projectId:"crisp-b06bf"},t={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},r=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents:runQuery`;try{const s=await c(r,{method:"POST",body:t});if(s.error){console.error("Error fetching data:",s.error);return}if(s.data&&s.data.length>0){const o=s.data[0];if(o.document&&o.document.fields){const i=o.document.name.split("/").pop()||"";this.userData={id:i,data:o.document.fields}}console.log(this.userData),this.addToDb()}else console.error("No user data found")}catch(s){console.error("Error fetching data:",s)}}async addToDb(){const e={projectId:"crisp-b06bf"};if(this.userData&&this.userData.data.shoppingAddress?.stringValue){const t=this.userData.data.shoppingAddress.stringValue;if(console.log(t),!this.uid){console.error("UID not found");return}const r=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents/shopping-address/${t}/allUserAddress`;if(this.newAddressDb){const s={fields:{country:this.newAddressDb.country,city:this.newAddressDb.city,street:this.newAddressDb.street,zip:this.newAddressDb.zip,phone:this.newAddressDb.phone,...this.newAddressDb.company&&{company:this.newAddressDb.company},...this.newAddressDb.fax&&{fax:this.newAddressDb.fax}}};try{const o=await c(r,{method:"POST",body:s});if(o.error){console.error("Error adding document:",o.error);return}o.data&&console.log("Document written with ID:",o.data.name)}catch(o){console.error("Error adding address:",o)}}}else if(this.userData&&!this.userData.data.shoppingAddress?.stringValue){const t=this.generateRandomId(),r=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents/users/${this.userData.id}`,s={fields:{name:this.userData.data.name,surname:this.userData.data.surname,uid:this.userData.data.uid,email:this.userData.data.email,shoppingAddress:{stringValue:t}}};try{const o=await c(r,{method:"PATCH",body:s});if(o.error){console.error("Error updating user document:",o.error);return}console.log("User document updated with new shopping address:",t);const i=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents/shopping-address/${t}/allUserAddress`;if(this.newAddressDb){const a={fields:{country:this.newAddressDb.country,city:this.newAddressDb.city,street:this.newAddressDb.street,zip:this.newAddressDb.zip,phone:this.newAddressDb.phone,...this.newAddressDb.company&&{company:this.newAddressDb.company},...this.newAddressDb.fax&&{fax:this.newAddressDb.fax}}};try{const d=await c(i,{method:"POST",body:a});if(d.error){console.error("Error adding address document:",d.error);return}d.data&&console.log("Address document written with ID:",d.data.name)}catch(d){console.error("Error adding address:",d)}}}catch(o){console.error("Error updating user document:",o)}}else console.error("No address data to add")}generateRandomId(){return Math.random().toString(36).substr(2,9)}}class Y{form;constructor(){this.form=n(".add-address .form"),this.form&&this.init()}init(){console.log(n("#phone"),n("#street"),n("#country"),n("#zip"));const e=new R(this.form,{errorLabelStyle:{color:"#1D1F21"}});e.addField(n("#phone"),[{rule:"required",errorMessage:"Enter your phone"},{rule:"customRegexp",value:/^\+\d{1,3}\d{9}$/,errorMessage:"Write correct phone"},{rule:"minLength",value:10,errorMessage:"Min lendth 10 symbol"},{rule:"maxLength",value:15,errorMessage:"Max lendth 15 symbol"}]).addField(n("#street"),[{rule:"required",errorMessage:"Enter your street"},{rule:"customRegexp",value:/^[-\w.]+$/i,errorMessage:"Write correct street"}]).addField(n("#country-hidden"),[{rule:"required",errorMessage:"Chose your country"}]).addField(n("#state-hidden"),[{rule:"required",errorMessage:"Chose your state/province"}]).addField(n("#zip"),[{rule:"required",errorMessage:"Enter your zip code"},{rule:"customRegexp",value:/^[0-9]{6}$/,errorMessage:"Write correct zip code"}]),e.onSuccess(()=>{console.log("Form is valid"),new G,window.location.reload()})}}class Z{button;container;constructor(e,t){this.button=n(e),this.container=n(t),this.button.addEventListener("click",this.toggleContent.bind(this))}toggleContent(){this.container?.classList.toggle("show-content")}}const X=n(".wishlist__all-cards");class ee{wishlist;userData;uid;constructor(){this.wishlist=[],this.userData=null,this.uid=this.getCookie("UID"),this.init()}init(){this.conectDb()}getCookie(e){const r=`; ${document.cookie}`.split(`; ${e}=`);if(r.length===2)return r.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const e={projectId:"crisp-b06bf"},t={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},r=`https://firestore.googleapis.com/v1/projects/${e.projectId}/databases/(default)/documents:runQuery`;try{const s=await c(r,{method:"POST",body:t});if(s.error){console.error("Error fetching data:",s.error);return}if(s.data&&s.data.length>0){const o=s.data[0];if(o.document&&o.document.fields){const i=o.document.name.split("/").pop()||"";this.userData={id:i,data:o.document.fields}}console.log(this.userData),this.getWishlistDb()}else console.error("No user data found")}catch(s){console.error("Error fetching data:",s)}}async getWishlistDb(){if(this.userData?.data.wishlistID?.stringValue){const t=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/all-wishlist/${this.userData.data.wishlistID.stringValue}/wishlist`;console.log("Fetching wishlist from URL:",t);try{const r=await c(t,{method:"GET"});if(r.error){console.error("Error fetching wishlist:",r.error);return}const s=r.data?.documents||[];console.log("Documents array:",s),s.length>0?(s.forEach(o=>{o&&o.name&&o.fields&&this.wishlist.push({id:o.name.split("/").pop()||"",data:o.fields})}),console.log("Wishlist:",this.wishlist),this.loadCards()):console.error("No wishlist data found")}catch(r){console.error("Error fetching wishlist:",r)}}else console.error("Wishlist ID not found")}async loadCards(){this.wishlist.forEach(e=>{const t=u("div",["wishlist__card","card",e.id,"skeleton"]),r=u("div","card__wrapper"),s=u("div","card__img");s.innerHTML=`
          <picture>
            <source srcset="${e.data.imgWebP.stringValue}" type="image/webp" />
            <img src="${e.data.img.stringValue}" />
          </picture>
      `;const o=u("div","card__info"),i=u("h1","card__title");i.innerText=e.data.name.stringValue;const a=u("p","card__price");a.innerText=e.data.cost.stringValue;const d=u("div","card__add-to-bag");d.innerHTML=`
            <div class="count">1</div>
            <button class="btn black" onclick="window.location.href = '/Crisp/one-product.html?id=${e.id}'">Add to cart</button>
      `;const h=u("div","card__remove-and-edit");h.innerHTML=`
        <div class="card__remove">
          <svg>
            <use href="#remove-clother"></use>
          </svg>
        </div>
        <div class="card__edit">
          <svg>
            <use href="#edit-clother"></use>
          </svg>
        </div>
      `,o.appendChild(i),o.appendChild(a),o.appendChild(d),r.appendChild(s),r.appendChild(o),t.appendChild(r),t.appendChild(h),X?.appendChild(t);const p=t.querySelector(".card__remove");p&&p.addEventListener("click",()=>this.removeCard(e.id,t)),O.stop("wishlist__card")})}async removeCard(e,t){const s=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/all-wishlist/${this.userData?.data.wishlistID?.stringValue}/wishlist/${e}`;try{const o=await c(s,{method:"DELETE"});if(o.error)throw new Error(`Error deleting document from Firestore: ${o.error.message}`);t.remove(),console.log("Card removed successfully")}catch(o){console.error("Error removing card:",o)}}}document.addEventListener("DOMContentLoaded",async()=>{new N,new V,new P,new j,new M,new B,new W,new z,new H,new Q(".drop-down__select",".tabs"),new _(".drop-down#country .drop-down__select",".drop-down#country .drop-down__list"),new _(".drop-down#state .drop-down__select",".drop-down#state .drop-down__list"),new Y,new Z(".contact-us__btn",".contact-us"),new ee,new q(".buy__bag",".bag__list")});new F;
