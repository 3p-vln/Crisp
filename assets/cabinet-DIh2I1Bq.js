import{g as i,a as y,f as l,r as c}from"./useFetch-CPNCRhkP.js";import{a as b,u as V,E as M,r as P,b as U,B as j,S as B,A as q}from"./search-DbR8hu1i.js";import{P as F,S as z}from"./pop-up-closer-BmjNRtmD.js";import{A as H}from"./add-to-bag-D7o2r1jJ.js";import{T as W}from"./tabs-YtMPvNz6.js";import{J as O}from"./just-validate.es-C73wyOde.js";import{L as R}from"./stop-preload-lHMBXtTV.js";class Q{title;breadCrumbs;observer;constructor(){this.title=i(".title__content h2"),this.breadCrumbs=y(".bread-crumbs a")[1],this.updateTitle(),this.observer=new MutationObserver(()=>this.updateTitle());const t={attributes:!0,attributeFilter:["class"],subtree:!0};document.querySelectorAll(".tabs__nav-btn").forEach(s=>{this.observer.observe(s,t),s.addEventListener("click",r=>{r.preventDefault(),this.setActiveTab(s),this.updateUrl(s)})}),this.initActiveTab()}updateTitle(){this.title&&this.breadCrumbs&&(this.title.textContent=this.getActiveTabTitle(),this.breadCrumbs.textContent=this.getActiveTabTitle())}getActiveTabTitle(){const t=i(".tabs__nav-btn_active");return t&&t.textContent||""}setActiveTab(t){document.querySelectorAll(".tabs__nav-btn").forEach(n=>n.classList.remove("tabs__nav-btn_active")),t.classList.add("tabs__nav-btn_active");const s=t.getAttribute("data-tab"),r=i(s);document.querySelectorAll(".tabs__item").forEach(n=>n.classList.remove("tabs__item_active")),r&&r.classList.add("tabs__item_active"),this.updateTitle()}updateUrl(t){const e=t.getAttribute("data-tab")?.substring(1);e&&history.pushState(null,"",`#${e}`)}initActiveTab(){const t=window.location.hash;if(t){const e=document.querySelector(`.tabs__nav-btn[data-tab="${t}"]`);e&&this.setActiveTab(e)}else{const e=document.querySelector(".tabs__nav-btn");e&&this.setActiveTab(e)}}}class N{userData;uid;constructor(){this.uid=this.getCookie("UID"),this.init()}init(){this.conectDb()}getCookie(t){const s=`; ${document.cookie}`.split(`; ${t}=`);if(s.length===2)return s.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const t={projectId:"crisp-b06bf"},e={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents:runQuery`,r=await l(s,{method:"POST",body:e});if(r.error){console.error("Error fetching data:",r.error);return}if(r.data&&r.data.length>0){const o=r.data[0];o.document&&o.document.fields&&(this.userData=o.document.fields,this.updateUi())}}updateUi(){this.contactInfo(),this.billing(),this.shoppingAdress()}contactInfo(){if(!this.userData)return;const t=i(".full-name");t&&(t.innerHTML=`${this.userData.name.stringValue} ${this.userData.surname.stringValue}`);const e=i(".email");e&&(e.innerHTML=this.userData.email.stringValue)}async billing(){if(this.userData&&this.userData.billing?.stringValue){const t=this.userData.billing.stringValue;let e=null;const r=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/billing/${t}`,o=await l(r);if(o.error){console.error("Ошибка при загрузке данных:",o.error);return}if(o.data){e=o.data.fields;const n=i(".billing-address");n&&(n.innerHTML=`${e.country.stringValue}, ${e.city.stringValue}, ${e.street.stringValue} street`)}}}async shoppingAdress(){if(this.userData&&this.userData.shoppingAddress?.stringValue){const t=this.userData.shoppingAddress.stringValue;let e=[];const r=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/shopping-address/${t}/allUserAddress`,o=await l(r);if(o.error){console.error("Ошибка при загрузке данных:",o.error);return}if(o.data&&Array.isArray(o.data.documents)){o.data.documents.forEach(a=>{a.fields&&e.push(a.fields)});const n=i(".shopping-address");if(n&&e.length>0){const a=e[0];n.innerHTML=`${a.phone.stringValue}<br>${a.country.stringValue}, ${a.city.stringValue}, ${a.street.stringValue} street, ${a.zip.stringValue}`}}else console.error("Response data is not in the expected format:",o.data)}}}class J{userData;uid;constructor(){this.uid=this.getCookie("UID"),this.init()}init(){this.conectDb(),this.setupEventListeners()}getCookie(t){const s=`; ${document.cookie}`.split(`; ${t}=`);if(s.length===2)return s.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const t={projectId:"crisp-b06bf"},e={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents:runQuery`;try{const r=await l(s,{method:"POST",body:e});if(r.error){console.error("Error fetching data:",r.error);return}if(r.data&&r.data.length>0){const o=r.data[0];o.document&&o.document.fields&&(this.userData=o.document.fields,this.uid=o.document.name.split("/").pop(),this.updateUi())}}catch(r){console.error("Error fetching data:",r)}}updateUi(){const t=y(".form__item-input");t&&t.forEach(e=>{e.id==="name"&&this.userData?e.value=this.userData.name.stringValue:e.id==="surname"&&this.userData&&(e.value=this.userData.surname.stringValue)})}setupEventListeners(){const t=i(".form__button .save");t&&t.addEventListener("click",d=>{d.preventDefault(),this.updateData(),window.location.reload()});const e=i("#changeEmailCheckbox"),s=i("#changePasswordCheckbox"),r=i("#emailField"),o=i("#passwordField"),n=i("#currentPasswordEmail")?.parentElement?.parentElement,a=i("#currentPassword")?.parentElement?.parentElement;e&&e.addEventListener("change",()=>{r.style.display=e.checked?"flex":"none",n.style.display=e.checked?"flex":"none"}),s&&s.addEventListener("change",()=>{o.style.display=s.checked?"flex":"none",a.style.display=s.checked?"flex":"none"})}async updateData(){const t=i("#name"),e=i("#surname"),s=i("#changeEmailCheckbox"),r=i("#email"),o=i("#changePasswordCheckbox"),n=i("#password"),a=i("#currentPasswordEmail"),d=i("#currentPassword");if(!t||!e||!s||!r||!o||!n||!d||!a){console.error("One or more input elements are not found in the DOM");return}const u=t.value,p=e.value,w=s.checked,C=r.value,A=o.checked,T=n.value,L=a.value,k=d.value;if(!this.uid){console.error("UID not found");return}const x={projectId:"crisp-b06bf"},S=`users/${this.uid}`,$=`https://firestore.googleapis.com/v1/projects/${x.projectId}/databases/(default)/documents/${S}?updateMask.fieldPaths=name&updateMask.fieldPaths=surname${w?"&updateMask.fieldPaths=email":""}`;let _={fields:{name:{stringValue:u},surname:{stringValue:p}}};w&&(_.fields.email={stringValue:C});try{const m=await l($,{method:"PATCH",body:_});if(m.error){console.error("Error updating data:",m.error);return}w&&await this.updateEmail(C,L),A&&await this.updatePassword(T,k)}catch(m){console.error("Error updating data:",m)}}async updateEmail(t,e){const s=b.currentUser;if(s)try{await this.reauthenticateUser(e),await V(s,t)}catch(r){console.error("Error updating email:",r)}}async reauthenticateUser(t){const e=b.currentUser;if(e&&e.email){const s=M.credential(e.email,t);try{await P(e,s)}catch(r){console.error("Error re-authenticating user:",r)}}}async updatePassword(t,e){const s=b.currentUser;if(s)try{await this.reauthenticateUser(e),await U(s,t)}catch(r){console.error("Error updating password:",r)}}}class I{dropdownSelect;dropdownMenu;menuItems;constructor(t,e){const s=i(t),r=i(e);if(!s||!r)throw new Error("Dropdown select or menu element not found");this.dropdownSelect=s,this.dropdownMenu=r,this.menuItems=y(".drop-down__item",this.dropdownMenu),this.init()}init(){this.dropdownSelect.addEventListener("click",t=>this.toggleMenu(t)),this.menuItems.forEach(t=>{t.addEventListener("click",()=>this.onItemClick(t))}),document.addEventListener("click",t=>this.handleOutsideClick(t)),this.dropdownMenu.classList.add("hidden")}onItemClick(t){const e=t.textContent;e&&(this.dropdownSelect.textContent=e,this.teardownDropdown())}teardownDropdown(){this.dropdownMenu.classList.add("hidden"),this.dropdownSelect.classList.remove("active")}toggleMenu(t){t.stopPropagation(),this.dropdownSelect.classList.toggle("active"),this.dropdownMenu.classList.toggle("hidden")}handleOutsideClick(t){!this.dropdownSelect.contains(t.target)&&!this.dropdownMenu.contains(t.target)&&this.teardownDropdown()}}class G extends I{constructor(t,e){super(t,e),this.initDropdownTabs()}initDropdownTabs(){window.innerWidth<=768&&this.setupDropdown(),window.addEventListener("resize",()=>{window.innerWidth<=768?this.setupDropdown():this.teardownDropdown()})}setupDropdown(){this.dropdownMenu.classList.add("drop-down__menu"),this.dropdownMenu.classList.add("hidden");const t=this.dropdownMenu.querySelector(".tabs__nav-btn_active");t&&t.textContent&&(this.dropdownSelect.textContent=t.textContent.trim())}teardownDropdown(){this.dropdownMenu.classList.remove("drop-down__menu"),this.dropdownMenu.classList.remove("hidden")}onItemClick(t){this.menuItems.forEach(e=>e.classList.remove("tabs__nav-btn_active")),t.classList.add("tabs__nav-btn_active"),super.onItemClick(t)}}class K{uid;constructor(){this.uid=this.getCookie("UID"),this.init()}init(){if(!this.uid){window.location.href="/Crisp/index.html";return}}getCookie(t){const s=`; ${document.cookie}`.split(`; ${t}=`);if(s.length===2)return s.pop()?.split(";").shift()}}const f=i(".drop-down#state"),Y=i("#country-hidden"),Z=i("#state-hidden");class D extends I{constructor(t,e){super(t,e)}onItemClick(t){super.onItemClick(t);const e=t.textContent;e&&(this.updateStateDropdown(e),this.updateHiddenInputFields(e))}updateStateDropdown(t){const e=this.getStatesByCountry(t);if(!f){console.error("State dropdown element not found");return}const s=f.querySelector(".drop-down__select");s&&(s.textContent="");const r=f.querySelector(".drop-down__list");r&&(r.innerHTML="",e.forEach(n=>{const a=document.createElement("div");a.classList.add("drop-down__item"),a.textContent=n,r.appendChild(a)}),r.querySelectorAll(".drop-down__item").forEach(n=>{n.addEventListener("click",()=>{if(!f){console.error("State dropdown element not found");return}const a=f.querySelector(".drop-down__select");a&&(a.textContent=n.textContent),this.teardownDropdown(),this.updateHiddenInputFields(n.textContent)})}))}getStatesByCountry(t){return{Ukraine:["Kyiv","Kharkiv","Odessa","Sumy","Zhytomyr","Lviv"],USA:["California","New York","Texas"],Canada:["Ontario","Quebec","British Columbia"]}[t]||[]}updateHiddenInputFields(t){const e=this.dropdownSelect.textContent;e&&(Y.value=e),t&&(Z.value=t)}}class X{userData;newAddressDb;uid;constructor(){this.newAddressDb=null,this.userData=null,this.uid=this.getCookie("UID"),this.init()}init(){this.fieldsDb(),this.conectDb()}fieldsDb(){const t=i("#company").value,e=i("#phone").value,s=i("#fax").value,r=i("#street").value,o=i("#country .drop-down__select")?.innerText,n=i("#state .drop-down__select")?.innerText,a=i("#zip").value;this.newAddressDb={country:{stringValue:o||""},city:{stringValue:n||""},street:{stringValue:r},zip:{stringValue:a},phone:{stringValue:e}},t&&(this.newAddressDb.company={stringValue:t}),s&&(this.newAddressDb.fax={stringValue:s})}getCookie(t){const s=`; ${document.cookie}`.split(`; ${t}=`);if(s.length===2)return s.pop()?.split(";").shift()}async conectDb(){if(!this.uid){console.error("UID not found");return}const t={projectId:"crisp-b06bf"},e={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents:runQuery`;try{const r=await l(s,{method:"POST",body:e});if(r.error){console.error("Error fetching data:",r.error);return}if(r.data&&r.data.length>0){const o=r.data[0];if(o.document&&o.document.fields){const n=o.document.name.split("/").pop()||"";this.userData={id:n,data:o.document.fields}}this.addToDb()}else console.error("No user data found")}catch(r){console.error("Error fetching data:",r)}}async addToDb(){const t={projectId:"crisp-b06bf"};if(this.userData&&this.userData.data.shoppingAddress?.stringValue){const e=this.userData.data.shoppingAddress.stringValue;if(!this.uid){console.error("UID not found");return}const s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents/shopping-address/${e}/allUserAddress`;if(this.newAddressDb){const r={fields:{country:this.newAddressDb.country,city:this.newAddressDb.city,street:this.newAddressDb.street,zip:this.newAddressDb.zip,phone:this.newAddressDb.phone,...this.newAddressDb.company&&{company:this.newAddressDb.company},...this.newAddressDb.fax&&{fax:this.newAddressDb.fax}}};try{const o=await l(s,{method:"POST",body:r});if(o.error){console.error("Error adding document:",o.error);return}}catch(o){console.error("Error adding address:",o)}}}else if(this.userData&&!this.userData.data.shoppingAddress?.stringValue){const e=this.generateRandomId(),s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents/users/${this.userData.id}`,r={fields:{name:this.userData.data.name,surname:this.userData.data.surname,uid:this.userData.data.uid,email:this.userData.data.email,shoppingAddress:{stringValue:e},wishlist:this.userData.data.wishlist}};try{const o=await l(s,{method:"PATCH",body:r});if(o.error){console.error("Error updating user document:",o.error);return}const n=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents/shopping-address/${e}/allUserAddress`;if(this.newAddressDb){const a={fields:{country:this.newAddressDb.country,city:this.newAddressDb.city,street:this.newAddressDb.street,zip:this.newAddressDb.zip,phone:this.newAddressDb.phone,...this.newAddressDb.company&&{company:this.newAddressDb.company},...this.newAddressDb.fax&&{fax:this.newAddressDb.fax}}};try{const d=await l(n,{method:"POST",body:a});if(d.error){console.error("Error adding address document:",d.error);return}}catch(d){console.error("Error adding address:",d)}}}catch(o){console.error("Error updating user document:",o)}}else console.error("No address data to add")}generateRandomId(){return Math.random().toString(36).substr(2,9)}}class tt{form;constructor(){this.form=i(".add-address .form"),this.form&&this.init()}init(){const t=new O(this.form,{errorLabelStyle:{color:"#1D1F21"}});t.addField(i("#phone"),[{rule:"required",errorMessage:"Enter your phone"},{rule:"customRegexp",value:/^\+\d{1,3}\d{9}$/,errorMessage:"Write correct phone"},{rule:"minLength",value:10,errorMessage:"Min length 10 symbols"},{rule:"maxLength",value:15,errorMessage:"Max length 15 symbols"}]).addField(i("#street"),[{rule:"required",errorMessage:"Enter your street"},{rule:"customRegexp",value:/^[-\w.]+$/i,errorMessage:"Write correct street"}]).addField(i("#country-hidden"),[{rule:"required",errorMessage:"Choose your country"}]).addField(i("#state-hidden"),[{rule:"required",errorMessage:"Choose your state/province"}]).addField(i("#zip"),[{rule:"required",errorMessage:"Enter your zip code"},{rule:"customRegexp",value:/^[0-9]{6}$/,errorMessage:"Write correct zip code"}]),t.onSuccess(()=>{new X,window.location.reload()})}}class et{button;container;constructor(t,e){this.button=i(t),this.container=i(e),this.button.addEventListener("click",this.toggleContent.bind(this))}toggleContent(){this.container?.classList.toggle("show-content")}}const st=i(".wishlist__all-cards");class rt{wishlist;userData;uid;constructor(){this.wishlist=[],this.userData=null,this.uid=this.getCookie("UID"),this.init()}init(){this.connectDb()}getCookie(t){const s=`; ${document.cookie}`.split(`; ${t}=`);if(s.length===2)return s.pop()?.split(";").shift()}async connectDb(){if(!this.uid){console.error("UID not found");return}const t={projectId:"crisp-b06bf"},e={structuredQuery:{from:[{collectionId:"users"}],where:{fieldFilter:{field:{fieldPath:"uid"},op:"EQUAL",value:{stringValue:this.uid}}}}},s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents:runQuery`;try{const r=await l(s,{method:"POST",body:e});if(r.error){console.error("Error fetching data:",r.error);return}if(r.data&&r.data.length>0){const o=r.data[0];if(o.document&&o.document.fields){const n=o.document.name.split("/").pop()||"";this.userData={id:n,data:o.document.fields}}await this.getWishlistDb()}else console.error("No user data found")}catch(r){console.error("Error fetching data:",r)}}async getWishlistDb(){if(this.userData?.data.wishlist?.arrayValue.values){const t={projectId:"crisp-b06bf"};for(const e of this.userData.data.wishlist.arrayValue.values){const s=`https://firestore.googleapis.com/v1/projects/${t.projectId}/databases/(default)/documents/clothers/${e.stringValue}`;try{const r=await l(s,{method:"GET"});if(r.error){console.error("Error fetching wishlist:",r.error);return}if(r.data){const o=r.data;o&&o.fields&&this.wishlist.push({id:o.name.split("/").pop()||"",data:o.fields})}}catch(r){console.error("Error fetching wishlist:",r)}}await this.loadCards()}else console.error("Wishlist ID not found")}async loadCards(){this.wishlist.forEach(t=>{const e=c("div",["wishlist__card","card",t.id,"skeleton"]),s=c("div","card__wrapper"),r=c("div","card__img");r.innerHTML=`
          <picture>
            <source srcset="${t.data.imgWebP.stringValue}" type="image/webp" />
            <img src="${t.data.img.stringValue}" />
          </picture>
      `;const o=c("div","card__info"),n=c("h1","card__title");n.innerText=t.data.name.stringValue;const a=c("p","card__price");a.innerText=t.data.cost.stringValue;const d=c("div","card__add-to-bag");d.innerHTML=`
            <div class="count">1</div>
            <button class="btn black">Add to cart</button>
      `;const u=c("div","card__remove-and-edit");u.innerHTML=`
        <div class="card__remove">
          <svg>
            <use href="#remove-clother"></use>
          </svg>
        </div>
        <div class="card__edit">
          <svg>
            <use href="#edit-clother"></use>
          </svg>
        </div>
      `,o.appendChild(n),o.appendChild(a),o.appendChild(d),s.appendChild(r),s.appendChild(o),e.appendChild(s),e.appendChild(u),st?.appendChild(e);const p=e.querySelector(".card__remove");p&&p.addEventListener("click",()=>this.removeCard(t.id,e)),R.stop("wishlist__card")})}async removeCard(t,e){if(!this.userData){console.error("User data not loaded");return}const s={projectId:"crisp-b06bf"},r=this.userData.id,o=`https://firestore.googleapis.com/v1/projects/${s.projectId}/databases/(default)/documents/users/${r}?updateMask.fieldPaths=wishlist`,a={fields:{wishlist:{arrayValue:{values:this.userData.data.wishlist?.arrayValue.values.filter(d=>d.stringValue!==t)||[]}}}};try{const d=await l(o,{method:"PATCH",body:a});if(d.error){console.error("Error removing card:",d.error);return}e.remove(),this.wishlist=this.wishlist.filter(u=>u.id!==t)}catch(d){console.error("Error removing card:",d)}}}const v=i(".bag__list"),g=i(".pop-up__list"),E=i(".summ span span");class ot{clotherInfo;cart;lastClickTime=0;wishlistContainer;constructor(){this.clotherInfo=null,this.cart=this.loadCart(),this.wishlistContainer=i(".wishlist__all-cards"),this.init()}init(){this.wishlistContainer&&this.wishlistContainer.addEventListener("click",t=>{const e=t.target,s=this.getCurrentCard(e);s&&this.handleAddToBagClick(s)}),this.initAddAllToBagButton()}getCurrentCard(t){let e=t;for(;e&&!e.classList.contains("card");)e=e.parentElement;return e}getLastClassValue(t){const e=t.className.split(" ");return e.length>0?e[e.length-1]:null}async handleAddToBagClick(t){const e=Date.now();if(e-this.lastClickTime<3e3)return;this.lastClickTime=e;const s=this.getLastClassValue(t);s&&(await this.fetchWishlistItem(s),this.clotherInfo&&this.addToList(t))}async fetchWishlistItem(t){const s=`https://firestore.googleapis.com/v1/projects/${{projectId:"crisp-b06bf"}.projectId}/databases/(default)/documents/clothers/${t}`,r=await l(s,{method:"GET"});if(r.error){console.error("Error fetching document:",r.error);return}r.data&&(this.clotherInfo={id:t,data:r.data.fields},console.log(this.clotherInfo))}addToList(t){if(this.clotherInfo){const e=this.clotherInfo.id,s=this.selectedSize(),[r,o]=this.count(t),n=parseFloat(o.replace(" EUR","").replace(",",".")),a=Number(r);v&&!v?.classList.contains("active")&&v.classList.add("active");const d=this.cart.find(u=>u.id===e&&u.size===s);d?(d.quantity+=a,d.price=n*d.quantity):this.cart.push({id:e,size:s,quantity:a,price:n*a,data:this.clotherInfo.data}),this.saveCart(),this.renderCart()}}selectedSize(){return this.clotherInfo?this.clotherInfo.data.size.arrayValue.values[0].stringValue:""}count(t){const e=t.querySelector(".card__add-to-bag .count"),s=t.querySelector(".card__price"),r=e?e.innerText.trim():"1",o=s?s.innerText.trim():"0.00 EUR";return[r,o]}saveCart(){localStorage.setItem("shoppingCart",JSON.stringify(this.cart))}loadCart(){const t=localStorage.getItem("shoppingCart");return t?JSON.parse(t):[]}renderCart(){if(g){if(g.innerHTML="",this.cart.length===0){const t=c("p","empty-cart-message");t.textContent="Your bag is empty.",g.appendChild(t)}else this.cart.forEach(t=>{const e=c("div","prod-in-bag"),s=c("a",["clother",t.id,t.size]);s.href=`one-product.html?id=${t.id}`;const r=c("div","clother__img");r.innerHTML=`
          <picture>
            <source srcset=${t.data.imgWebP.stringValue} type="image/webp" />
            <img src=${t.data.img.stringValue} />
          </picture>
        `;const o=c("div","clother__info"),n=c("p","clother__name");n.textContent=t.data.name.stringValue;const a=c("p","clother__size");a.innerHTML=`Size: <span>${t.size}</span>`;const d=c("p","clother__art");d.innerHTML=`
          Art.No.: <span>434536465<span>
        `;const u=c("p","clother__count");u.innerHTML=`
          ${t.quantity} x ${(t.price/t.quantity).toFixed(2)} EUR
        `;const p=c("div","clother__remove");p.innerHTML=`
          <svg>
            <use href="#remove"></use>
          </svg>
        `,o.appendChild(n),o.appendChild(a),o.appendChild(d),o.appendChild(u),s.appendChild(r),s.appendChild(o),e.appendChild(s),e.appendChild(p),g.appendChild(e),this.removeClother(e,t)});this.updateTotal()}}removeClother(t,e){const s=t.querySelector(".clother__remove");s&&s.addEventListener("click",()=>{this.cart=this.cart.filter(r=>r.id!==e.id||r.size!==e.size),t.remove(),this.saveCart(),this.updateTotal()})}updateTotal(){const t=this.cart.reduce((e,s)=>e+s.price,0);E&&(E.textContent=t.toFixed(2))}async addAllToBag(){if(this.wishlistContainer){const t=this.wishlistContainer.querySelectorAll(".card");for(const e of t){const s=this.getLastClassValue(e);s&&(await this.fetchWishlistItem(s),this.clotherInfo&&this.addToList(e))}}}initAddAllToBagButton(){const t=i(".wishlist__add");t&&t.addEventListener("click",()=>{this.addAllToBag()})}}document.addEventListener("DOMContentLoaded",async()=>{new K,new j,new B,new H,new q,new W,new Q,new N,new J,new G(".drop-down__select",".tabs"),new D(".drop-down#country .drop-down__select",".drop-down#country .drop-down__list"),new D(".drop-down#state .drop-down__select",".drop-down#state .drop-down__list"),new tt,new et(".contact-us__btn",".contact-us"),new rt,new F(".buy__bag",".bag__list"),new ot});new z;
